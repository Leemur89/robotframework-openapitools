[tool.poetry]
name="robotframework-openapitools"
version = "0.1.0"
description = "A set of Robot Framework libraries to test APIs for which the OAS is available."
license = "Apache-2.0"
authors = [
    "Bartlomiej Hirsz <bartek.hirsz@gmail.com>",
    "Mateusz Nojek <matnojek@gmail.com>",
    "Robin Mackaij <r.a.mackaij@gmail.com>"
]
maintainers = ["Robin Mackaij <r.a.mackaij@gmail.com>"]
readme =  "./docs/README.md"
homepage = "https://github.com/MarketSquare/robotframework-openapitools"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Testing :: Acceptance",
    "Framework :: Robot Framework",
]
packages = [
    {include = "OpenApiDriver", from = "src"},
    {include = "OpenApiLibCore", from = "src"},
    {include = "roboswag", from = "src"},

]
include = ["*.libspec"]

[tool.poetry.dependencies]
python = "^3.8"
robotframework = ">=5"
robotframework-datadriver = ">=1.7.0"
requests = "^2.27"
prance = {version = "^0.22", extras = ["CLI"]}
Faker = ">=11"
rstr = "^3"
openapi-core = "^0.16"
rich_click = "^1.4"
black = ">=22.12.0"
Jinja2 = "^3.1.2"

[tool.poetry.group.dev.dependencies]
isort = ">=5.12.0"
pylint = ">=2.16.0"
mypy = ">=1.0.0"
types-requests = ">=2.28.11"
invoke = ">=2.0.0"
robotframework-stacktrace = ">=0.4.0"
uvicorn = ">=0.20.0"
fastapi = ">=0.92.0"
coverage = {version = ">=7.2.0", extras = ["toml"]}
robotframework-tidy = ">=3.4.0"
robotframework-robocop = ">=2.7.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
branch = true
parallel = true
source = ["src"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@abstract"
]

[tool.mypy]
show_error_codes = true
plugins = "pydantic.mypy"

[[tool.mypy.overrides]]
module = [
    "prance.*",
    "robot.*",
    "openapi_core.*",
    "invoke",
    "uvicorn",
    "rstr"
]
ignore_missing_imports = true

[tool.black]
line-length = 88
target-version = ["py38"]

[tool.isort]
src_paths = [
    "src"
]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
combine_as_imports = true
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.pylint.'MESSAGES CONTROL']
disable = ["W1203"]

[tool.pylint.'FORMAT CHECKER']
max-line-length=120

[tool.pylint.'SIMILARITIES CHECKER']
ignore-imports="yes"
